import { SubmittableExtrinsic } from "@polkadot/api/types";
import BN from "bn.js";
import type { ISubmittableResult } from "@polkadot/types/types";
/**
 * @name getTxGasFee
 * @summary Get the gas fee estimation for a transaction.
 * @param txHex Transaction hex
 * @param address Public address of the sender
 * @returns Transaction fee estimation
 */
export declare const getTxGasFee: (txHex: `0x${string}`, address: string) => Promise<import("@polkadot/types/interfaces").Balance>;
/**
 * @name getTxTreasuryFee
 * @summary Get the fee needed by Ternoa treasury for specific transaction services.
 * @description Some Ternoa's services required additional fees on top of chain gas fees, for example: minting a marketplace, minting an NFT or creating a capsule.
 * @param txHex Transaction hex
 * @returns Fee estimation
 */
export declare const getTxTreasuryFee: (txHex: `0x${string}`) => Promise<BN>;
/**
 * @name getTxFees
 * @summary Get the total fees for a transaction hex.
 * @param txHex Hex of the transaction
 * @param address Public address of the sender
 * @returns Total estimated fee which is the sum of the chain gas fee and the treasury fee
 */
export declare const getTxFees: (txHex: `0x${string}`, address: string) => Promise<BN>;
/**
 * @name checkFundsForTxFees
 * @summary Check if a signed transaction sender has enough funds to pay transaction gas fees on transaction submit.
 * @param tx Signed transaction object
 */
export declare const checkFundsForTxFees: (tx: SubmittableExtrinsic<"promise", ISubmittableResult>) => Promise<void>;
